@{
	ViewData["Title"] = "School Year";
}
@if (TempData["MessageAddYear"] != null)
{
	<div class="alert alert-@TempData["MessageAddType"]">
		@TempData["MessageAddYear"]
	</div>
}
@if (TempData["MessageEditYear"] != null)
{
	<div class="alert alert-@TempData["MessageEditType"]">
		@TempData["MessageEditYear"]
	</div>
}
@if (TempData["MessageDeleteYear"] != null)
{
	<div class="alert alert-@TempData["MessageDeleteType"]">
		@TempData["MessageDeleteYear"]
	</div>
}
@using CAPSTONE_TEAM01_2024.Utilities
@model CAPSTONE_TEAM01_2024.ViewModels.SchoolYearViewModel
<div class="content-wrapper" style="min-height: 912.2px;">
	<!-- Content Header (Page header) -->
	<header class="content-header">
		<div class="container-fluid">
			<div class="row mb-2">
				<div class="col-sm-6">
					<h1 class="m-0">Danh Sách Năm Học</h1>
				</div><!-- /.col -->
			</div><!-- /.row -->
		</div><!-- /.container-fluid -->
	</header>

	<!-- /.content-header -->
	<!-- Main content -->
	<main class="content">
		<div class="container-fluid">
			<div class="card">
				<div class="card-header">
					<div class="row text-center">
						<div class="col-auto">
							<button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#AddPeriodModal">
								<i class="bi bi-plus custom-icon"></i> Thêm Năm Học
							</button>
						</div>
						<div class="col">
							<nav class="navbar navbar-light bg-light">
								<form class="d-flex ms-auto">
									<input class="form-control me-2" type="search" id="searchInput" placeholder="Nhập nội dung cần tìm" aria-label="Search">
								</form>
							</nav>
						</div>
					</div>
				</div>
				<!-- /.card-header -->

				<div class="card-body">
					<table class="table table-striped">
						<thead>
							<tr class="text-center">
								<th scope="col">#</th>
								<th scope="col">Năm Học</th>
								<th scope="col">Thời gIan Bắt Đầu</th>
								<th scope="col">Thòi gian Kết Thúc</th>
								<th scope="col">Thao Tác</th>
							</tr>
						</thead>
						<tbody id="periodTable">
						@{int number = (Model.PaginatedPeriods.PageIndex - 1) * Model.PaginatedPeriods.PageSize;}
						@foreach (var period in Model.PaginatedPeriods)
						{
							number++;
							<tr class="table-row">
								<td scope="row" class="text-center">@number</td>
								<td class="text-center">@period.PeriodName</td>
								<td class="text-center">@period.PeriodStart.ToString("dd/MM/yyyy")</td>
								<td class="text-center">@period.PeriodEnd.ToString("dd/MM/yyyy")</td>
								<td class="text-center">
									<button type="button" class="btn btn-outline-primary btn-sm"
											data-bs-toggle="modal"
											data-bs-target="#EditPeriodModal"
											data-period-id="@period.PeriodId"
											data-period-name="@period.PeriodName"
											data-period-start="@period.PeriodStart.ToString("yyyy-MM-dd")"
											data-period-end="@period.PeriodEnd.ToString("yyyy-MM-dd")"
											aria-label="Edit class details">
										<i class="fa-solid fa-pen-to-square custom-icon"></i> Cập Nhật
									</button>
									<button type="button" class="btn btn-outline-danger btn-sm"
											data-bs-toggle="modal"
											data-bs-target="#DeletePeriodModal"
											data-period-id="@period.PeriodId"
											aria-label="Delete class">
										<i class="fa-solid fa-trash custom-icon"></i> Xóa
									</button>
								</td>
							</tr>
						}
						<!-- Additional rows can go here -->
						<tr id="noResults" style="display: none;">
							<td colspan="5" class="text-center">Không tìm thấy nội dung</td>
						</tr>
						</tbody>
					</table>
					<nav aria-label="Page navigation" style=" float:right;">
						<ul class="pagination">
							@if (Model.PaginatedPeriods.HasPreviousPage)
							{
								<li class="page-item">
									<a class="page-link" asp-action="SchoolYear" asp-route-pageNumber="@(Model.PaginatedPeriods.PageIndex - 1)">Previous</a>
								</li>
							}
							else
							{
								<li class="page-item disabled">
									<span class="page-link">Trang Trước</span>
								</li>
							}

							@for (int i = 1; i <= Model.PaginatedPeriods.TotalPages; i++)
							{
								if (i == Model.PaginatedPeriods.PageIndex)
								{
									<li class="page-item active">
										<span class="page-link">@i</span>
									</li>
								}
								else
								{
									<li class="page-item">
										<a class="page-link" asp-action="SchoolYear" asp-route-pageNumber="@i">@i</a>
									</li>
								}
							}

							@if (Model.PaginatedPeriods.HasNextPage)
							{
								<li class="page-item">
									<a class="page-link" asp-action="SchoolYear" asp-route-pageNumber="@(Model.PaginatedPeriods.PageIndex + 1)">Next</a>
								</li>
							}
							else
							{
								<li class="page-item disabled">
									<span class="page-link">Trang Sau</span>
								</li>
							}
						</ul>
					</nav>
				</div>
				<!-- /.card-body -->
			</div>
		</div>
	</main>
	<!-- /.content -->
</div>

<!--Add Modal-->
<div class="modal fade" id="AddPeriodModal" tabindex="-1" data-bs-backdrop="false" aria-labelledby="AddPeriodModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="AddClassModalLabel">Thêm Năm Học</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form id="addPeriodForm" asp-action="AddPeriod" method="post">
					<div class="mb-3">
						<label class="form-label">Năm Học</label>
						<input type="text" class="form-control" id="periodName" name="periodName" required readonly>
					</div>
					<div class="mb-3">
						<label for="periodStart" class="form-label">Thời gian Bắt Đầu</label>
						<input type="date" class="form-control" id="periodStart" name="periodStart" required>
					</div>
					<div class="mb-3">
						<label for="periodEnd" class="form-label">Thời gian Kết Thúc</label>
						<input type="date" class="form-control" id="periodEnd" name="periodEnd" required>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
						<button type="submit" class="btn btn-primary">Thêm</button>
					</div>
				</form>
				<div id="error-message-add" style="color: red; display: none;">Thời gian kết thúc không thể sớm hơn thời gian bắt đầu.</div>
			</div>
		</div>
	</div>
</div>

<!--Edit Modal-->
<div class="modal fade" id="EditPeriodModal" data-bs-backdrop="false" tabindex="-1" aria-labelledby="EditModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="EditModalLabel">Cập Nhật Năm Học</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<form asp-action="EditPeriod" method="post">
					<div class="mb-3">
						<input type="hidden" class="form-control" id="editId" name="periodId" required>
						<label for="addEmail" class="form-label">Năm Học</label>
						<input type="email" class="form-control" id="editName" name="periodName" readonly required>
					</div>
					<div class="mb-3">
						<label for="addId" class="form-label">Thời gian Bắt Đầu</label>
						<input type="date" class="form-control" id="editStart" name="periodStart" required>
					</div>
					<div class="mb-3">
						<label for="addFullName" class="form-label">Thời gian Kết Thúc</label>
						<input type="date" class="form-control" id="editEnd" name="periodEnd" required>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
						<button type="submit" class="btn btn-primary">Cập Nhật</button>
					</div>
				</form>
				<div id="error-message-edit" style="color: red; display: none;">Thời gian kết thúc không thể sớm hơn thời gian bắt đầu.</div>
			</div>
		</div>
	</div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="DeletePeriodModal" data-bs-backdrop="false" tabindex="-1" aria-labelledby="DeleteModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="DeleteModalLabel">Xóa Tài Khoản</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<form asp-action="DeletePeriod" method="post">
				<div class="modal-body">
					<input type="hidden" name="periodId" />
					<p>Bạn có chắc chắn muốn xóa năm học này không?</p>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
					<button type="submit" class="btn btn-danger">Xóa</button>
				</div>
			</form>
		</div>
	</div>
</div>

<script>
//Add modal JS
	document.getElementById('periodStart').addEventListener('change', updatePeriodName);
	document.getElementById('periodEnd').addEventListener('change', updatePeriodName);

	function updatePeriodName() {
		const startDate = document.getElementById('periodStart').value;
		const endDate = document.getElementById('periodEnd').value;
		const errorMessage = document.getElementById('error-message-add');

		if (startDate && endDate) {
			const start = new Date(startDate);
			const end = new Date(endDate);

			if (end < start) {
				errorMessage.style.display = 'block';
				document.getElementById('periodEnd').value = '';
				document.getElementById('periodName').value = '';
			} else {
				errorMessage.style.display = 'none';
				const startYear = start.getFullYear();
				const endYear = end.getFullYear();
				document.getElementById('periodName').value = `${startYear} - ${endYear}`;
			}
		}
	}
// Edit modal JS
	document.addEventListener('DOMContentLoaded', function () {
		document.getElementById('editStart').addEventListener('change', updatePeriodName);
		document.getElementById('editEnd').addEventListener('change', updatePeriodName);

		function updatePeriodName() {
			const startDate = document.getElementById('editStart').value;
			const endDate = document.getElementById('editEnd').value;
			const errorMessage = document.getElementById('error-message-edit');

			if (startDate && endDate) {
				const start = new Date(startDate);
				const end = new Date(endDate);

				if (end < start) {
					errorMessage.style.display = 'block';
					document.getElementById('editEnd').value = '';
					document.getElementById('editName').value = '';
				} else {
					errorMessage.style.display = 'none';
					const startYear = start.getFullYear();
					const endYear = end.getFullYear();
					document.getElementById('editName').value = `${startYear} - ${endYear}`;
				}
			}
		}

		var editModal = document.getElementById('EditPeriodModal');
		editModal.addEventListener('show.bs.modal', function (event) {
			var button = event.relatedTarget; // Button that triggered the modal
			var periodId = button.getAttribute('data-period-id');
			var periodName = button.getAttribute('data-period-name');
			var periodStart = button.getAttribute('data-period-start');
			var periodEnd = button.getAttribute('data-period-end');

			// Populate the modal fields
			var modalTitle = editModal.querySelector('.modal-title');
			var inputId = editModal.querySelector('#editId');
			var inputName = editModal.querySelector('#editName');
			var inputStart = editModal.querySelector('#editStart');
			var inputEnd = editModal.querySelector('#editEnd');

			modalTitle.textContent = 'Cập Nhật Năm Học';
			inputId.value = periodId;
			inputName.value = periodName;
			inputStart.value = periodStart;
			inputEnd.value = periodEnd;
		});
	});
// Delete modal JS
	document.addEventListener('DOMContentLoaded', function () {
		var deleteModal = document.getElementById('DeletePeriodModal');
		deleteModal.addEventListener('show.bs.modal', function (event) {
			var button = event.relatedTarget; // Button that triggered the modal
			var periodId = button.getAttribute('data-period-id');

			// Populate the hidden input field with the period ID
			var inputId = deleteModal.querySelector('input[name="periodId"]');
			inputId.value = periodId;
		});
	});
//Search function
	document.addEventListener('DOMContentLoaded', function () {
		var input = document.getElementById('searchInput');
		input.addEventListener('input', filterTable);

		function filterTable() {
			var filter, table, tr, td, i, j, txtValue, visibleRows;
			filter = input.value.toUpperCase();
			table = document.getElementById("periodTable");
			tr = table.getElementsByTagName("tr");
			visibleRows = 0;

			for (i = 0; i < tr.length; i++) {
				if (tr[i].id !== "noResults") {
					tr[i].style.display = "none"; // Hide all rows initially
					td = tr[i].getElementsByTagName("td");
					for (j = 0; j < td.length; j++) {
						if (td[j]) {
							txtValue = td[j].textContent || td[j].innerText;
							if (txtValue.toUpperCase().indexOf(filter) > -1) {
								tr[i].style.display = ""; // Show the row if a match is found
								visibleRows++;
								break;
							}
						}
					}
				}
			}

			// Show the "Nothing found" row if no rows are visible
			var noResultsRow = document.getElementById("noResults");
			if (visibleRows === 0) {
				noResultsRow.style.display = "";
			} else {
				noResultsRow.style.display = "none";
			}

			// Show all rows if the search field is empty
			if (filter === "") {
				for (i = 0; i < tr.length; i++) {
					if (tr[i].id !== "noResults") {
						tr[i].style.display = "";
					}
				}
				noResultsRow.style.display = "none";
			}
		}
	});

</script>
