@{
	ViewData["Title"] = "Class Info";
}
@if (TempData["MessageAddStudent"] != null)
{
	<div class="alert alert-@TempData["MessageAddStudentType"]">
		@TempData["MessageAddStudent"]
	</div>
}
@if (TempData["MessageEditStudent"] != null)
{
	<div class="alert alert-@TempData["MessageEditStudentType"]">
		@TempData["MessageEditStudent"]
	</div>
}
@if (TempData["MessageDeleteStudent"] != null)
{
	<div class="alert alert-@TempData["MessageDeleteStudentType"]">
		@TempData["MessageDeleteStudent"]
	</div>
}
@if (TempData["MessageImportStudent"] != null)
{
    <div class="alert alert-@TempData["MessageImportStudentType"]">
        @TempData["MessageImportStudent"]
    </div>
}
@using CAPSTONE_TEAM01_2024.Utilities
@model CAPSTONE_TEAM01_2024.ViewModels.StudentListViewModel
<div class="content-wrapper" style="min-height: 912.2px;">
	<!-- Content Header (Page header) -->
	<header class="content-header">
		<div class="container-fluid">
			<div class="row mb-2">
				<div class="col-sm-6">
					<h1 class="m-0">Danh Sách Sinh Viên</h1>
				</div><!-- /.col -->
			</div><!-- /.row -->
		</div><!-- /.container-fluid -->
	</header>

	<!-- /.content-header -->
	<!-- Main content -->
	<main class="content">
		<div class="container-fluid">
			<div class="card">
				<div class="card-header">
					<div class="row text-center">
						<div class="col-auto">
							<button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#AddStudentModal">
								<i class="bi bi-plus custom-icon"></i> Thêm Sinh Viên
							</button>
							<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#ImportExcelModal">
								<i class="bi bi-upload"></i> Nhập File
							</button>
                            <a type="button" class="btn btn-secondary" asp-controller="Categories" asp-action="ExportStudentToExcel" asp-route-classId="@Model.Class.Id">
								<i class="bi bi-download"></i> Xuất File
							</a>
						</div>
						<div class="col">
							<nav class="navbar navbar-light bg-light">
								<form class="d-flex ms-auto">
									<input class="form-control me-2" type="search" id="searchInput" placeholder="Nhập nội dung cần tìm" aria-label="Search">
								</form>
							</nav>
						</div>
					</div>
				</div>
				<!-- /.card-header -->

				<div class="card-body">
					<table class="table table-striped">
						<thead>
							<tr class="text-center">
								<th scope="col">#</th>
								<th scope="col">Mã Số SV</th>
								<th scope="col">Email</th>
								<th scope="col">Họ và Tên</th>
								<th scope="col">Ngày Tháng Năm Sinh</th>
								<th scope="col">Mã Lớp</th>
								<th scope="col">Tình Trạng</th>
								<th scope="col">Thao Tác</th>
							</tr>
						</thead>
						<tbody id="classTable">
							@{
								int number = (Model.PaginatedStudents.PageIndex - 1) * Model.PaginatedStudents.PageSize;
							}
							@foreach (var Student in Model.PaginatedStudents)
							{
								number++;
								<tr class="table-row">
									<td scope="row" class="text-center">@number</td>
									<td class="text-center">@Student.Id</td>
									<td class="text-center">@Student.Email</td>
									<td class="text-center">@Student.FullName</td>
									<td class="text-center">@Student.DateOfBirth.ToString("dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture)</td>
									<td class="text-center">@Student.Class.ClassName</td>
									<td class="text-center">@Student.Status</td>
									<td class="text-center">
										<button type="button" class="btn btn-outline-primary btn-sm"
                                            data-bs-toggle="modal"
                                            data-bs-target="#EditStudentModal"
                                            data-student-id="@Student.Id"
                                            data-student-email="@Student.Email"
                                            data-student-name="@Student.FullName"
                                            data-student-dob="@Student.DateOfBirth.ToString("yyyy-MM-dd", System.Globalization.CultureInfo.InvariantCulture)"
                                            data-student-classid="@Student.ClassId"
                                            data-student-status="@Student.Status"
                                            data-pm-id="@Student.ProfileManagerId"
                                            aria-label="edit student details">
                                            <i class="fa-solid fa-pen-to-square custom-icon"></i> Cập nhật
                                        </button>
                                        <button type="button" class="btn btn-outline-danger btn-sm"
                                            data-bs-toggle="modal"
                                            data-bs-target="#DeleteStudentModal"
                                            data-student-id="@Student.Id"
                                            aria-label="delete student">
                                            <i class="fa-solid fa-trash custom-icon"></i> Xóa
                                        </button>
									</td>
								</tr>
							}
							<tr id="noresults" style="display: none;">
								<td colspan="7" class="text-center">Không tìm thấy nội dung</td>
							</tr>
						</tbody>
					</table>
					<nav aria-label="Page navigation" style=" float:right;">
						<ul class="pagination">
							@if (Model.PaginatedStudents.HasPreviousPage)
							{
								<li class="page-item">
									<a class="page-link" asp-action="StudentList" asp-route-pageNumber="@(Model.PaginatedStudents.PageIndex - 1)">Trang Trước</a>
								</li>
							}
							else
							{
								<li class="page-item disabled">
									<span class="page-link">Trang Trước</span>
								</li>
							}

							@for (int i = 1; i <= Model.PaginatedStudents.TotalPages; i++)
							{
								if (i == Model.PaginatedStudents.PageIndex)
								{
									<li class="page-item active">
										<span class="page-link">@i</span>
									</li>
								}
								else
								{
									<li class="page-item">
										<a class="page-link" asp-action="StudentList" asp-route-pageNumber="@i">@i</a>
									</li>
								}
							}

							@if (Model.PaginatedStudents.HasNextPage)
							{
								<li class="page-item">
									<a class="page-link" asp-action="StudentList" asp-route-pageNumber="@(Model.PaginatedStudents.PageIndex + 1)">Trang Sau</a>
								</li>
							}
							else
							{
								<li class="page-item disabled">
									<span class="page-link">Trang Sau</span>
								</li>
							}
						</ul>
					</nav>
				</div>
				<!-- /.card-body -->
			</div>
		</div>
	</main>
	<!-- /.content -->
</div>

<!-- Add Student Modal -->
<div class="modal fade" id="AddStudentModal" tabindex="-1" data-bs-backdrop="false" aria-labelledby="AddStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="AddStudentModalLabel">Thêm Sinh Viên</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addStudentForm" asp-action="AddStudent" method="post">
                    <!-- Email Dropdown -->
                    <div class="mb-3">
                        <label for="studentEmail" class="form-label">Email</label>
                        <select class="form-select" id="studentEmail" name="studentEmail" required>
                            <option value="" disabled selected>Vui lòng chọn email</option>
                            @foreach (var profileManager in Model.ProfileManagers)
                            {
                                <option value="@profileManager.Id" data-email="@profileManager.Email" data-maso="@profileManager.MaSo" data-hovaten="@profileManager.TenDayDu">
                                    @profileManager.Email
                                </option>
                            }
                        </select>
                    </div>
                    <input type="hidden" class="form-control" id="profileManagerId" name="profileManagerId" required readonly>
                    <input type="hidden" class="form-control" id="selectedEmail" name="selectedEmail" required readonly>
                    <!-- Mã Số SV -->
                    <div class="mb-3">
                        <label for="studentId" class="form-label">Mã Số SV</label>
                        <input type="text" class="form-control" id="studentId" name="studentId" required readonly>
                    </div>
                    <!-- Họ và Tên -->
                    <div class="mb-3">
                        <label for="studentFullName" class="form-label">Họ và Tên</label>
                        <input type="text" class="form-control" id="studentFullName" name="studentFullName" required readonly>
                    </div>
                    <!-- Ngày Tháng Năm Sinh -->
                    <div class="mb-3">
                        <label for="studentDateOfBirth" class="form-label">Ngày Tháng Năm Sinh</label>
                        <input type="date" class="form-control" id="studentDateOfBirth" name="studentDateOfBirth" required>
                    </div>
                    <!-- Mã Lớp -->
                    <div class="mb-3">
                        <label for="classId" class="form-label">Mã Lớp</label>
                        <input type="text" class="form-control" id="className" name="className" value="@Model.Class.ClassName" required readonly>
                    </div>
                    <input type="hidden" class="form-control" id="classId" name="classId" value="@Model.Class.Id" required readonly>
                    <!-- Tình Trạng -->
                    <div class="mb-3">
                        <label for="studentStatus" class="form-label">Tình Trạng</label>
                        <select class="form-select" id="studentStatus" name="studentStatus" required>
                            <option value="" disabled selected>Vui lòng chọn trạng thái</option>
                            <option value="Đang học">Đang học</option>
                            <option value="Bảo Lưu">Bảo Lưu</option>
                            <option value="Nghỉ Học">Nghỉ Học</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary">Thêm</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Student Modal -->
<div class="modal fade" id="EditStudentModal" tabindex="-1" data-bs-backdrop="false" aria-labelledby="EditStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="EditStudentModalLabel">Chỉnh sửa Sinh Viên</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editStudentForm" asp-action="EditStudent" method="post">
                    <!-- Hidden Field for Student ID -->
                    <input type="hidden" id="editStudentId" name="studentId">
                    <!-- Email -->
                    <div class="mb-3">
                        <label for="editStudentEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="editStudentEmail" name="studentEmail" required readonly>
                    </div>
                    <!-- Mã Số SV -->
                    <div class="mb-3">
                        <label for="editStudentId" class="form-label">Mã Số SV</label>
                        <input type="text" class="form-control" id="editStudentMSSV" name="studentMSSV" required readonly>
                    </div>
                    <!-- Họ và Tên -->
                    <div class="mb-3">
                        <label for="editStudentFullName" class="form-label">Họ và Tên</label>
                        <input type="text" class="form-control" id="editStudentFullName" name="studentFullName" required readonly>
                    </div>
                    <!-- Ngày Tháng Năm Sinh -->
                    <div class="mb-3">
                        <label for="editStudentDateOfBirth" class="form-label">Ngày Tháng Năm Sinh</label>
                        <input type="date" class="form-control" id="editStudentDateOfBirth" name="studentDateOfBirth" required>
                    </div>
                    <!-- Mã Lớp -->
                    <div class="mb-3">
                        <label for="editClassName" class="form-label">Mã Lớp</label>
                        <input type="text" class="form-control" id="editClassName" name="className" value="@Model.Class.ClassName" required readonly>
                    </div>
                    <input type="hidden" class="form-control" id="editClassId" name="classId" required readonly>
                    <!-- Tình Trạng -->
                    <div class="mb-3">
                        <label for="editStudentStatus" class="form-label">Tình Trạng</label>
                        <select class="form-select" id="editStudentStatus" name="studentStatus" required>
                            <option value="" disabled selected>Vui lòng chọn trạng thái</option>
                            <option value="Đang học">Đang học</option>
                            <option value="Bảo Lưu">Bảo Lưu</option>
                            <option value="Nghỉ Học">Nghỉ Học</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary">Cập Nhật</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete Student Modal -->
<div class="modal fade" id="DeleteStudentModal" data-bs-backdrop="false" tabindex="-1" aria-labelledby="DeleteModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="DeleteModalLabel">Xóa Sinh Viên</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<form asp-action="DeleteStudent" method="post">
				<div class="modal-body">
					<input type="hidden" name="studentId"/>
					<p>Bạn có chắc chắn muốn xóa Sinh Viên này không?</p>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
					<button type="submit" class="btn btn-danger">Xóa</button>
				</div>
                <input type="hidden" class="form-control" id="deleteClassId" name="classId" value ="@Model.Class.Id" required readonly>
			</form>
		</div>
	</div>
</div>

<!-- Import Student Modal -->
<div class="modal fade" id="ImportExcelModal" tabindex="-1" data-bs-backdrop="false" aria-labelledby="ImportExcelModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="ImportExcelModalLabel">Nhập File Excel</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="mb-3">
					<label for="excelTemplateFile" class="form-label fw-bold"> Tải file Excel mẫu</label>
					<div id="excelTemplateFile" style="position: relative; display: inline-block; width: 100%; height: calc(1.5em + .75rem + 2px); margin-bottom: 0px;">
                        <a class="btn btn-warning text-dark" asp-controller="Categories" asp-action="DownloadStudentTemplate" asp-route-className="@Model.Class.ClassName">
							<i class="bi bi-download"></i> Tải file mẫu
						</a>
					</div>
				</div>
                <form id="importExcelForm" asp-action="ImportStudentFromExcel" asp-route-classId="@Model.Class.Id" method="post" enctype="multipart/form-data">
					<div class="mb-3">
						<label for="excelFile" class="form-label fw-bold"> Chọn file Excel để nhập</label>
						<div class="custom-file" style="position: relative; display: inline-block; width: 100%; height: calc(1.5em + .75rem + 2px); margin-bottom: 0;">
							<input type="file" class="custom-file-input" id="excelFile" name="file" accept=".xlsx,.xls" required style="position: absolute; width: 100%; height: 100%; margin: 0; opacity: 0;">
							<label class="custom-file-label" for="excelFile" style="position: absolute; top: 0; right: 0; left: 0; z-index: 1; height: calc(1.5em + .75rem + 2px); padding: .375rem .75rem; font-weight: 400; line-height: 1.5; color: #495057; background-color: #fff; border: 1px solid #ced4da; border-radius: .25rem; cursor: pointer;">
								Chọn file <i class="bi bi-upload" style="float:right;"></i>
							</label>
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
						<button type="submit" class="btn btn-primary"> Nhập</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>

<script>
//Add Student JS
document.addEventListener('DOMContentLoaded', (event) => {
    // Get classId from URL and set it in the form
    var urlParams = new URLSearchParams(window.location.search);
    var classId = urlParams.get('Id') || window.location.pathname.split('/').pop();
    document.getElementById('AddStudentModal').addEventListener('show.bs.modal', function (event) {
        document.getElementById('classId').value = classId;
        document.getElementById('className').value = '@Model.Class.ClassName';
    });

    // Fill other fields based on the selected email
    document.getElementById("studentEmail").addEventListener("change", function() {
        var selectedOption = this.options[this.selectedIndex];
        document.getElementById("profileManagerId").value = selectedOption.value; // Set profileManagerId
        document.getElementById("selectedEmail").value = selectedOption.getAttribute("data-email"); // Set selected email
        document.getElementById("studentId").value = selectedOption.getAttribute("data-maso");
        document.getElementById("studentFullName").value = selectedOption.getAttribute("data-hovaten");
    });
});
//Edit Student JS
function populateEditModal(student) {
    document.getElementById('editStudentId').value = student.id;
    document.getElementById('editStudentEmail').value = student.email;
    document.getElementById('editStudentMSSV').value = student.studentId;
    document.getElementById('editStudentFullName').value = student.fullName;
    document.getElementById('editStudentDateOfBirth').value = student.dateOfBirth;
    document.getElementById('editClassId').value = student.classId;
    document.getElementById('editStudentStatus').value = student.status;
    $('#EditStudentModal').modal('show');
}

document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('[data-bs-target="#EditStudentModal"]').forEach(button => {
        button.addEventListener('click', function() {
            const student = {
                id: this.getAttribute('data-student-id'),
                email: this.getAttribute('data-student-email'),
                studentId: this.getAttribute('data-student-id'), // Ensure correct attributes
                fullName: this.getAttribute('data-student-name'),
                dateOfBirth: this.getAttribute('data-student-dob'),
                classId: this.getAttribute('data-student-classid'),
                status: this.getAttribute('data-student-status')
            };
            populateEditModal(student);
        });
    });
});
//Delete Modal JS
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('[data-bs-target="#DeleteStudentModal"]').forEach(button => {
        button.addEventListener('click', function() {
            const studentId = this.getAttribute('data-student-id');
            document.querySelector('#DeleteStudentModal input[name="studentId"]').value = studentId;
        });
    });
});
//Search Function JS
document.addEventListener('DOMContentLoaded', function() {
    var searchInput = document.getElementById('searchInput');
    searchInput.addEventListener('keyup', function() {
        var filter = searchInput.value.toUpperCase();
        var table = document.getElementById('classTable');
        var tr = table.getElementsByTagName('tr');
        var noResults = document.getElementById('noresults');
        var found = false;

        for (var i = 0; i < tr.length; i++) {
            var td = tr[i].getElementsByTagName('td');
            if (td.length > 0) {
                var match = false;
                for (var j = 0; j < td.length; j++) {
                    if (td[j].textContent.toUpperCase().indexOf(filter) > -1) {
                        match = true;
                        break;
                    }
                }
                if (match) {
                    tr[i].style.display = '';
                    found = true;
                } else {
                    tr[i].style.display = 'none';
                }
            }
        }

        // Show or hide the "no results" row
        if (found) {
            noResults.style.display = 'none';
        } else {
            noResults.style.display = '';
        }
    });
});
//Import Student modal JS
	document.querySelector('.custom-file-input').addEventListener('change', function (e) {
		var fileName = document.getElementById("excelFile").files[0].name;
		var nextSibling = e.target.nextElementSibling;
		nextSibling.innerText = fileName;
	});
</script>





